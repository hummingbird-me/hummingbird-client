{{#if getLibraryEntryTask.isRunning}}
  <div class="text-xs-center">
    {{loading-spinner size="small"}}
  </div>
{{else}}
  {{! Header }}
  {{#if showHeader}}
    <span class="entry-state-header">
      <span>{{t "library-entry.state.header" state=hasLibraryEntry}}</span>
    </span>
  {{/if}}

  <div class="entry-state-status">
    {{#unless hasLibraryEntry}} {{! Doesn't have a library entry }}
      {{library-entry/state/new-entry
        media=media
        createOnly=createOnly
        onCreate=(action "createLibraryEntry")}}
    {{else}} {{! Has a library entry }}
      {{#unless hideProgress}}
        <span class="state-helper">
          {{t "library-entry.state.saved-in"
            link=(href-to "users.library" session.account.name (query-params status=libraryEntry.status))
            status=(t (concat "library-shared." libraryEntry.status) type=mediaType)
            htmlSafe=true
          }}
        </span>
      {{/unless}}

      {{#if (eq libraryEntry.status "completed")}}
        {{! completed state }}
        {{library-entry/state/completed
          libraryEntry=libraryEntry
          hideRemove=hideRemove
          rateOnly=rateOnly
          onRatingChange=(action "updateAttribute" "rating")
          onReaction=(toggle-action "reactionOpen" this)
          onRewatch=(queue
            (action (mut libraryEntry.reconsumeCount) (inc libraryEntry.reconsumeCount))
            (action (mut libraryEntry.progress) 0)
            (action "updateAttribute" "status" "current")
          )
          onRemove=(action "removeLibraryEntry")
        }}
      {{else if (eq libraryEntry.status "current")}}
        {{! current status }}
        {{library-entry/state/current
          hideProgress=hideProgress
          libraryEntry=libraryEntry
          onRatingChange=(action "updateAttribute" "rating")
          onProgressChange=(action "updateAttribute" "progress")
          onStatusChange=(action "updateAttribute" "status")
          onReaction=(toggle-action "reactionOpen" this)
          onComplete=(queue
            (action (mut libraryEntry.status) "completed")
            (action "updateAttribute" "rating")
          )
          onRemove=(action "removeLibraryEntry")
        }}
      {{else}}
        {{! fallback for planned/on_hold/dropped }}
        {{library-entry/state/planned
          hideProgress=hideProgress
          libraryEntry=libraryEntry
          onProgressChange=(action "updateAttribute" "progress")
          onStatusChange=(action "updateAttribute" "status")
          onRemove=(action "removeLibraryEntry")
        }}
      {{/if}}

      {{! Reaction Modal }}
      {{#if reactionOpen}}
        {{to-elsewhere named="modal" send=(component "modals/media-reaction"
          media=media
          libraryEntry=libraryEntry
          modalId="reaction-modal"
          onClose=(toggle-action "reactionOpen" this)
        )}}
      {{/if}}
    {{/unless}}
  </div>
{{/if}}
